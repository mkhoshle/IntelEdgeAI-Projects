Total time: 9.66183 s
File: main.py
Function: infer_on_stream at line 51

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    51                                           @profile
    52                                           def infer_on_stream(args):
    53         1         11.0     11.0      0.0      feed = InputFeeder(input_type=args.input_type,input_file=args.input)
    54         1     169843.0 169843.0      1.8      feed.load_data()
    55                                           
    56         1         36.0     36.0      0.0      width = int(feed.cap.get(3))
    57         1          2.0      2.0      0.0      height = int(feed.cap.get(4))
    58                                              
    59         1          6.0      6.0      0.0      model1, model2, model3,model4 = list(args.model.split(' '))
    60                                               # Load face dtection model
    61         1         12.0     12.0      0.0      plugin_fd = face_detection(model1, args.device)
    62         1     430141.0 430141.0      4.5      plugin_fd.load_model()
    63                                               
    64                                               # Load head pose estimation model
    65         1         13.0     13.0      0.0      plugin_hp = head_pose_estimation(model2, args.device)
    66         1     205800.0 205800.0      2.1      plugin_hp.load_model()
    67                                           
    68                                               # Load landmark dtection model
    69         1         16.0     16.0      0.0      plugin_fld = facial_landmarks_detection(model3, args.device)
    70         1     152187.0 152187.0      1.6      plugin_fld.load_model()
    71                                           
    72                                               # Load gaze estimation model
    73         1         14.0     14.0      0.0      plugin_ge = gaze_estimation(model4, args.device)
    74         1     409984.0 409984.0      4.2      plugin_ge.load_model()
    75                                           
    76                                               # Instansiate Mouse Controller
    77         1         11.0     11.0      0.0      mc = MouseController('medium','medium')
    78                                               
    79         1          2.0      2.0      0.0      if args.chk_performance:
    80                                           #        pp = pprint.PrettyPrinter(indent=4)
    81                                           #    else:
    82         1          1.0      1.0      0.0          pp = None
    83                                           
    84         1          0.0      0.0      0.0      request_id = 0  
    85        60    5299165.0  88319.4     54.8      for i,frame in enumerate(feed.next_batch()):
    86        60        287.0      4.8      0.0          if frame is None:
    87         1          5.0      5.0      0.0              break
    88                                                   else:
    89        59       1108.0     18.8      0.0              print("iteration No: {}".format(i))
    90                                                   
    91                                                       ## Face Detection
    92        59      72117.0   1222.3      0.7              p_frame = plugin_fd.preprocess_input(frame)
    93        59      60874.0   1031.8      0.6              plugin_fd.predict(p_frame, request_id)
    94        59    2275331.0  38564.9     23.5              if plugin_fd.wait() == 0:
    95        59        256.0      4.3      0.0                  if pp:
    96                                                               pp.pprint(plugin_fd.exec_network.requests[0].get_perf_counts())
    97        59       7470.0    126.6      0.1                  outputs = plugin_fd.get_output()
    98        59      70685.0   1198.1      0.7                  face_crop = plugin_fd.preprocess_output(outputs, frame, args, width, height)
    99                                           
   100                                                       ## Head pose estimation
   101        59       4954.0     84.0      0.1              p_face_crop = plugin_hp.preprocess_input(face_crop)
   102        59      15698.0    266.1      0.2              plugin_hp.predict(p_face_crop, request_id)
   103        59     150769.0   2555.4      1.6              if plugin_hp.wait() == 0:
   104        59      22792.0    386.3      0.2                  outputs = plugin_hp.get_output()
   105        59        157.0      2.7      0.0                  angles = plugin_hp.preprocess_output(outputs)
   106                                           
   107                                                       ## Landmark detection model
   108        59       6456.0    109.4      0.1              p_face_crop = plugin_fld.preprocess_input(face_crop)
   109        59       9679.0    164.1      0.1              plugin_fld.predict(p_face_crop, request_id)
   110        59      37905.0    642.5      0.4              if plugin_fld.wait() == 0:
   111        59      12381.0    209.8      0.1                  outputs = plugin_fld.get_output()
   112        59        611.0     10.4      0.0                  initial_w = np.shape(face_crop)[1]
   113        59        192.0      3.3      0.0                  initial_h = np.shape(face_crop)[0]
   114        59      39675.0    672.5      0.4                  left_eye,right_eye = plugin_fld.preprocess_output(outputs,face_crop,initial_w, initial_h)
   115                                                   
   116                                                       ## Gaze estimation model
   117        59       8749.0    148.3      0.1              net_input = plugin_ge.preprocess_input(left_eye, right_eye,angles)
   118        59      37321.0    632.6      0.4              plugin_ge.predict(net_input, request_id)
   119        59     127793.0   2166.0      1.3              if plugin_ge.wait() == 0:
   120        59      21694.0    367.7      0.2                  outputs = plugin_ge.get_output()
   121        59        419.0      7.1      0.0                  x,y = plugin_ge.preprocess_output(outputs)
   122                                                       
   123                                                       # for benchmarking we only do one iteration
   124        59         72.0      1.2      0.0              if pp:
   125                                                           break
   126                                           
   127                                                       ## Change mouse location
   128                                           #            cv2.imshow('window-name',frame)
   129                                                       # This will cause a delay in order to give mouse enough time to move in the desired direction
   130                                           #            cv2.waitKey(60)
   131                                           #            mc.move(x,y)
   132                                           
   133         1       9135.0   9135.0      0.1      feed.close()
   134         1          2.0      2.0      0.0      return

